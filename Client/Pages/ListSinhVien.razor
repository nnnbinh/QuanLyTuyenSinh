@page "/sinhvienss"
@inject HttpClient Http
@inject ISinhvientrungtuyen Sinhvientrungtuyen
@inject NavigationManager NavigationManager
@attribute [Authorize]
<PageTitle>Sinh Viên VIDO</PageTitle>
<h3 style="color:darkorange">Sinh Viên VIDO</h3>

<nav class="navbar navbar-light bg-light">
  <div class="container-fluid"> 
      <SearchView ColumnTitle="Search"
          OnSearchTextChanged="OnListSinhVienSearchTextChanged"></SearchView>
  </div>
</nav>
<table class="table table-bordered">
	<thead>
		<tr>
			<td>Họ Tên</td>
            <td>Ngày Sinh</td>
            <td>Bậc Học</td>
            <td>Mã ngành xét tuyển</td>
            <td>Cán bộ tư vấn</td>
            <td>Trạng Thái</td>
            <td></td>
		</tr>
	</thead>
    <tbody>
        @foreach (var thish in onethisinh)
       {
            <tr>
                <td><a href=$"/thisinh/{thish.id}"   @onclick:preventDefault>@thish.HoTen</a></td>
                <td>@thish.NgaySinh</td>
                <td>@thish.BacHoc</td>
                <td>@thish.MaNganhXetTuyen</td>
                <td>@thish.CBTuVan</td>
                <td>@thish.TrangThai</td>
                <td>
                    <button class="btn btn-outline-warning" @onclick="(()=>showthish(thish.Id))"><i class="oi oi-pencil"></i></button>
                    @*<button class="btn btn-primary" @onclick="Createthish"><i class="oi oi-plus"></i></button>*@
                </td>
            </tr>           
       }
       <tfoot>
        <Pagination TotalPages="@(totalPages != 0 ? totalPages : 1)"
                    PageIndex="@PageIndex"
                    Radius="3"
                    OnSelectedPage="@SelectedPage">
        </Pagination>
    </tfoot>
    </tbody>
    <br />
  <button class="btn btn-outline-success" @onclick="Createthish">Create Sinh Viên</button>
</table>
@code {

    private IEnumerable<ThiSinh> onethisinh = Enumerable.Empty<ThiSinh>();

    private int PageIndex = 1;
    private int itemsPerPage = 5;
    private int totalPages = 1;

    //searchlist 
    protected override async Task OnInitializedAsync()
    {
        await Sinhvientrungtuyen.Getthisinh();
        if (Sinhvientrungtuyen != null)
        {
            // Initialize the number of "totalPages"


            // Initialize the "comments" which will be displayed when the page loaded first time.
            onethisinh = Sinhvientrungtuyen.thisinhs.ToList();
            totalPages = (int)Math.Ceiling((onethisinh.Count() / (decimal)itemsPerPage));
            onethisinh = Sinhvientrungtuyen.thisinhs.ToList().Skip(0).Take(itemsPerPage);
            Console.WriteLine(totalPages);
        }

    }
    void showthish(int id)
    { 
        NavigationManager.NavigateTo($"thisinh/{id}");
    }
    void Createthish()
    {
        NavigationManager.NavigateTo("/thisinh");
    }
    private void SelectedPage(int selectedPageIndex)
    {
        if (Sinhvientrungtuyen != null)
        {
            PageIndex = selectedPageIndex;
            var skipCount = itemsPerPage * (PageIndex - 1);
            onethisinh = Sinhvientrungtuyen.thisinhs.ToList().Skip(skipCount).Take(itemsPerPage).ToList();
        }
    }

    private void OnListSinhVienSearchTextChanged(ChangeEventArgs changeEventArgs)
    {
        string searchText = changeEventArgs.Value.ToString();

        onethisinh = Sinhvientrungtuyen.thisinhs.ToList().Where(s => s.HoTen.ToLower().Contains(searchText.ToLower())||
                                                                     s.MaNganhXetTuyen.ToLower().Contains(searchText.ToLower())||
                                                                     s.BacHoc.ToLower().Contains(searchText.ToLower())||
                                                                     s.TrangThai.ToLower().Contains(searchText.ToLower())).ToList();
    }
}
